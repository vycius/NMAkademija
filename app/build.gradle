plugins {
    id 'com.github.ben-manes.versions' version '0.15.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.nmakademija.nmaakademija"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 115
        versionName getVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-debug'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        xmlReport true
    }
}

ext {
    firebaseVersion = '11.0.2'
    supportVersion = '25.4.0'
    leakCanaryVersion = '1.5.1'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:animated-vector-drawable:$supportVersion"
    compile "com.android.support:customtabs:$supportVersion"
    compile "com.android.support:cardview-v7:$supportVersion"
    compile "com.android.support:support-v4:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:preference-v7:$supportVersion"
    compile "com.android.support:preference-v14:$supportVersion"
    compile "com.android.support:support-annotations:$supportVersion"

    testCompile 'junit:junit:4.12'

    compile "com.google.firebase:firebase-auth:$firebaseVersion"
    compile "com.google.android.gms:play-services-auth:$firebaseVersion"
    compile 'com.facebook.android:facebook-android-sdk:4.23.0'

    compile "com.google.firebase:firebase-core:$firebaseVersion"
    compile "com.google.firebase:firebase-messaging:$firebaseVersion"
    compile "com.google.firebase:firebase-database:$firebaseVersion"
    compile "com.google.firebase:firebase-crash:$firebaseVersion"
    compile "com.google.firebase:firebase-perf:$firebaseVersion"

    compile 'com.github.bumptech.glide:glide:3.8.0'

    compile 'it.sephiroth.android.library.bottomnavigation:bottom-navigation:2.0.2'

    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
}

// https://github.com/ben-manes/gradle-versions-plugin
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'
